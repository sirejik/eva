@startuml

interface Config {
}

class TankConfig {
}
TankConfig --|> Config

class ColorConfig {
}
ColorConfig --|> Config

class PIDRegulator {
}

class ColorSensorBase {
}
ColorSensorBase --> ColorConfig

class ColorSensor {
}
ColorSensor --|> ColorSensorBase

class InfraredSensor {
}

class TankBase {
}
TankBase --> TankConfig

class Tank {
}
Tank --|> TankBase

interface RobotBase {
    run()
}

interface TrolleyBase {
        tank: TankBase
        color_sensor: ColorSensor
}
TrolleyBase --|> RobotBase
TrolleyBase --> TankBase
TrolleyBase --> ColorSensor
TrolleyBase --> PIDRegulator

class Follower {
        tank: Tank
        infrared_sensor: InfraredSensor
}
Follower --|> RobotBase
Follower --> Tank
Follower --> InfraredSensor

class Traveler {
        tank: Tank
}
Traveler --|> RobotBase
Traveler --> Tank

class Trolley {
}
Trolley --|> TrolleyBase

interface TunerBase {
        touch_sensor: TouchSensor
        sound: Sound
        _process()
        _save_to_config()
}

class ColorTuner {
        tank: TankBase
        color_sensor: ColorSensorBase
}
ColorTuner --|> TunerBase
ColorTuner --> TankBase
ColorTuner --> ColorSensorBase

class InfraredTuner {
        tank: Tank
        infrared_sensor: InfraredSensor
}
InfraredTuner --|> TunerBase
InfraredTuner --> Tank
InfraredTuner --> InfraredSensor

class TankTuner {
        tank: TankBase
        color_sensor: ColorSensor
}
TankTuner --|> TunerBase
TankTuner --> TankBase
TankTuner --> ColorSensor

class TrolleyTunerBase {
}
TrolleyTunerBase --|> TrolleyBase
TrolleyTunerBase --|> TunerBase

class TrolleyTuner {
}
TrolleyTuner --|> TrolleyTunerBase

class TrolleyTunerOnTrack {
}
TrolleyTunerOnTrack --|> TrolleyTunerBase

@enduml
